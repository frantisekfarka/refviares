grammar

%cdb, ic {{tex \iota_\Gamma }} :: 'cdb_' ::= {{com deBruijn indices for contexts }}
%  | zeroc                ::   :: zero  
%  | succ cdb             ::   :: succ
%  | ( cdb )              :: S :: paren                        

ixc {{tex I_\Gamma{} }}, m :: 'cdb_' ::= {{com deBruijn indices for context }}
  | zeroc                ::   :: zero  
  | succ ixc             ::   :: succ
  | blah ::   :: blah

ixt {{tex I_T }}, n :: 'tdb_' ::= {{com deBruijn indices for pi types }}
  | zerot                ::   :: zero  
  | suct ixt             ::   :: succ
  | blah ::   :: blah


grammar
nK {{ tex K^{n}{} }} , nL {{ tex L^{n}{} }} :: 'kind_nl_' ::= {{ com Locally Nameless Kinds }}
  | typeK                ::   :: type                           {{ com kind of all types }} 
  | Pi nTy . nK          ::   :: pi_intro                    {{ com kind of dependente functions }}
  | ( nK )               :: S :: paren                        
     {{ coq [[nK]] }}
%     {{ ocaml nK }}
  | nK [ nte / ixc ]     :: M :: subst                         {{ com substitution }}
     {{ coq (tsubst_K [[nte]] [[ixc]] [[nK]]) }}
%     {{ ocaml int }}
%     {{ tex [[K]] [ [[te]] / [[var]] ] }} 

nTy {{ tex T^{n}{} }}, nA {{ tex A^{n}{} }}, nB {{ tex B^{n}{} }} :: 'type_nl_' ::= {{ com Locally Nameless Types }}
  | tcon                 ::   :: tcon                          {{ com type constant }}
  | Pi nTy1 . nTy2         ::   :: pi_intro                       {{ com type of dependente functions }}
  | nTy nte               ::   :: pi_elim                        {{ com application of a type former }}
  | ( nTy )               :: S :: paren                        
     {{ coq [[nTy]] }}
%     {{ ocaml nTy }}
  | nTy [ nte / ixc ]    :: M :: subst                          {{ com substitution }}
     {{ coq ( tsubst_Ty [[nte]] [[ixc]] [[nTy]] ) }}
%%     {{ ocaml int }}
%%     {{ tex [[Ty]] [ [[te]] / [[var]] ] }}
%

nte {{ tex t^n{} }}, nM {{ tex M^{n}{} }}, nN {{ tex N^{n}{} }} :: 'term_nl_' ::= {{ com Locally Nameless Terms }}
  | con                   ::   :: con                 {{ com term constant }} 
  | ixc                   ::   :: ixc                 {{ com indices left of $\vdash$ (context) }} 
  | ixt                   ::   :: ixt                 {{ com indices right of $\vdash$ ($\Pi$ and $\Sigma$ types) }} 
  | \ nTy . nte           ::   :: pi_intro            {{ com formation of $\Pi$ type }}
  | nte1 nte2             ::   :: pi_elim             {{ com application }}
  | ( nte )               :: S :: paren                        
     {{ coq [[nte]] }}
%     {{ ocaml nte }}
  | nte [ nte' / ixc ]   :: M :: subst                         {{ com substitution of term}}
     {{ coq ( tsubst_te [[nte']] [[ixc]] [[nte]] ) }}
%%     {{ ocaml int }}
%%     {{ tex [[te]] [ [[te']] / [[var]] ] }}

nsgn {{ tex \mathcal{S}^{n}{} }} :: 'signature_nl_' ::= {{ com Locally Nameless Signature }}
%    {{ coq list (con*nTy+tcon*nK) }}
%    {{ ocaml ((con * ty , tcon*k) sgn_el_type)  list }}
  | empty               ::   :: empty             {{ com empty signature }}
%     {{ coq empty }}
  | nsgn , con : nTy   ::   :: con
%     {{ coq (cons (inl([[con]],[[nTy]])) [[nsgn]]) }}
  | nsgn , tcon : nK  ::   :: tcon
%     {{ coq (cons (inr([[tcon]],[[nK]])) [[nsgn]]) }}

nctx {{ tex \Gamma^n{} }} :: 'context_nl_' ::= {{ com Locally Nameless Context }}
%    {{ coq list (nTy) }}
  | empty               ::   :: empty              {{ com empty context }}
%     {{ coq empty }}
  | nctx , nTy   ::   :: ctxvar
%     {{ coq (cons [[nTy]] [[nctx]]) }}
%

