grammar 

formula :: formula_ ::=          
  | judgement                                       :: :: judgement
  | c notin dom ( sgn )                             :: :: cnotinsig 
     {{ coq (not (indomCon [[c]] [[sgn]])) }}
     {{ tex [[c]] \not\in \dom([[sgn]]) }}
  | alpha notin dom ( sgn )                         :: :: bnotinsig  
     {{ coq (not (indomTCon [[alpha]] [[sgn]])) }}
     {{ tex [[alpha]] \not\in \dom([[sgn]]) }}
  | x notin dom ( ctx )                             :: :: xnotinctx
     {{ coq (not (indomVar [[x]] [[ctx]])) }}
     {{ tex [[x]] \not\in \dom([[ctx]]) }}
  | c : A in sgn                                    :: :: cinsig
     {{ coq (boundCon [[c]] [[A]] [[sgn]]) }}
     {{ tex [[c]] : [[A]] \in [[sgn]] }}
  | alpha : K in sgn                                :: :: binsig
     {{ coq (boundTCon [[alpha]] [[K]] [[sgn]]) }}
     {{ tex [[alpha]] : [[K]] \in [[sgn]] }}
  | x : A in ctx                                    :: :: xinctx
     {{ coq (boundVar [[x]] [[A]] [[ctx]]) }}
     {{ tex [[x]] : [[A]] \in [[ctx]] }}


%formula :: formula_ ::=          
  | c notin dom ( nsgn )                            :: :: cnotinsig_nl
     {{ coq (not (indomnCon [[c]] [[nsgn]])) }}
     {{ tex [[c]] \not\in \dom([[nsgn]]) }}
  | alpha notin dom ( nsgn )                        :: :: bnotinsig_nl
     {{ coq (not (indomnTCon [[alpha]] [[nsgn]])) }}
     {{ tex [[alpha]] \not\in \dom([[nsgn]]) }}
  | c : C in nsgn                                   :: :: cinsig_nl
     {{ coq (boundnCon [[c]] [[C]] [[nsgn]]) }}
     {{ tex [[c]] : [[C]] \in [[nsgn]] }}
  | alpha : nK in nsgn                              :: :: binsig_nl
     {{ coq (boundnTCon [[alpha]] [[nK]] [[nsgn]]) }}
     {{ tex [[alpha]] : [[nK]] \in [[nsgn]] }}


